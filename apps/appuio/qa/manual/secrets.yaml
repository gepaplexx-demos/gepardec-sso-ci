kind: Secret
apiVersion: v1
metadata:
  name: keycloak-secret
  namespace: gepardec-sso-qa
data:
  # Dummy values for secrets are base64 encoded too. This is done to have valid base64 encoded values in the secret inorder to avoid errors when applying
  # No actual values are stored in the secret, DON'T CHECK IN ACTUAL VALUES!!!
  # admin
  KEYCLOAK_ADMIN: YWRtaW4=
  # https://gepardec-sso-qa.apps.cloudscale-lpg-2.appuio.cloud
  KC_HOSTNAME_URL: >-
    aHR0cHM6Ly9nZXBhcmRlYy1zc28tcWEuYXBwcy5jbG91ZHNjYWxlLWxwZy0yLmFwcHVpby5jbG91ZA==
  # keycloak
  KC_DB_USERNAME: a2V5Y2xvYWs=
  # true
  KC_HTTP_ENABLED: dHJ1ZQ==
  # change me
  KC_DB_PASSWORD: Y2hhbmdlbWU=
  # jdbc:postgresql://postgresql-keycloak:5432/keycloak
  KC_DB_URL: amRiYzpwb3N0Z3Jlc3FsOi8vcG9zdGdyZXNxbC1rZXljbG9hazo1NDMyL2tleWNsb2Fr
  # change me
  KEYCLOAK_ADMIN_PASSWORD: Y2hhbmdlbWU=
  # https://gepardec-sso-qa.apps.cloudscale-lpg-2.appuio.cloud
  KC_HOSTNAME_ADMIN_URL: >-
    aHR0cHM6Ly9nZXBhcmRlYy1zc28tcWEuYXBwcy5jbG91ZHNjYWxlLWxwZy0yLmFwcHVpby5jbG91ZA==
  # 443
  KC_HTTPS_PORT: NDQz
  KC_HTTPS_CERTIFICATE_FILE: dHJ1ZQ==
  KC_HTTPS_CERTIFICATE_KEY_FILE: dHJ1ZQ==
type: Opaque

---

kind: Secret
apiVersion: v1
metadata:
  name: google-oauth-credentials
  namespace: gepardec-sso-qa
immutable: false
data:
  #should be in format of:
  # GOOGLE_CLIENT_ID=<secret>.apps.googleusercontent.com
  # GOOGLE_CLIENT_SECRET=<secret>
  secrets.properties: >-
    a2V5Y2xvYWs=
type: Opaque


